/**
 * Form Control
 *
 * This atom is usually used on input elements to apply generic control field appearance
 */

input,
select,
textarea {
    border: none;
    font-family: inherit;
    &:-webkit-autofill,
    &:-webkit-autofill:hover,
    &:-webkit-autofill:focus {
        -webkit-box-shadow: 0 0 0 1000px $color-white inset;
        transition: background-color 5000s ease-in-out 0s;
    }
}

input[type='text'],
input[type='number'],
input[type='email'],
input[type='tel'],
input[type='password'],
input[type='submit'],
input[type='date'],
input[type='datetime'],
input[type='month'],
input[type='range'],
input[type='reset'],
input[type='search'],
input[type='time'],
input[type='url'],
input[type='week'],
select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    padding-right: 0;
    padding-left: 0;
    padding-top: $base-line-height * 0.125;
    padding-bottom: $base-line-height * 0.125;
    border-bottom: $surface-border-2;
    box-shadow: none;
    outline: none; // prevent ugly chrome outline
    background-color: $color-white; // prevent ugly yellow background in chrome
}

// remove ugly number spinners in chrome and firefox
input[type=number] {
    -moz-appearance: textfield;
    appearance: none;
    margin: 0;
}

input[type=date]::-webkit-inner-spin-button,
input[type=date]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.c-form__textarea {
    width: 100%;
    resize: vertical;
    max-height: 20rem;
    min-height: $base-grid-layout * 2;
    border: $surface-border-2;

    &:hover,
    &:focus {
        outline: $surface-border-2;
    }

    &.has-error {
        border-color: $color-deep-orange-800;

        &:hover {
            outline: $surface-border-2--danger;
        }

        &:focus {
            outline: $surface-border-2--danger;
        }
    }
}

.l-form__group {
    margin-top: $base-line-height * 2;
    padding-top: $base-line-height * 0.25;
    padding-bottom: $base-line-height * 0.25;
}

.l-form__control-group {
    max-width: $readable-paragraph-width; // keep form inputs from growing too wide
    @include media-min($media-small) {
        display: inline-block;
        width: 65%;
        margin-left: $base-line-height;
    }
}

.c-form__input {
    width: 100%;
    border-top: 0;
    border-left: 0;
    border-right: 0;
    outline: none; // prevent ugly chrome outline
    margin-bottom: $base-line-height * 0.125;
    @include type-settings(0);

    &.has-error {
        border-color: $color-deep-orange-800;

        &:hover {
            box-shadow: 0 1px 0 0 $color-deep-orange-800;
        }
    }

    &:focus,
    &:hover {
        box-shadow: 0 1px 0 0 $color-black;
    }

    &:disabled {
        color: #575757; 
        cursor: not-allowed;
        box-shadow: none; // Prevent focus box shadow
        border-bottom: $surface-border-2-dashed;
    }
}

.c-form__input--group {
    flex: auto;
    width: 90%;

    @include media-min($media-small) {
        width: 95%;
    }
}

.c-form__label {
    font-weight: bold;
    display: block;

    @include type-settings(0);
    margin-top: $base-line-height * 0.25;
    margin-bottom: $base-line-height * 0.125;

    &.has-error {
        color: $color-deep-orange-800;
    }
}
